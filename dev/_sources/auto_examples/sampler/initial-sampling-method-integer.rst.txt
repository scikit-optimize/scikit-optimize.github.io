
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sampler/initial-sampling-method-integer.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_sampler_initial-sampling-method-integer.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sampler_initial-sampling-method-integer.py:


===================================================
Comparing initial sampling methods on integer space
===================================================

Holger Nahrstaedt 2020 Sigurd Carlsen October 2019

.. currentmodule:: skopt

When doing baysian optimization we often want to reserve some of the
early part of the optimization to pure exploration. By default the
optimizer suggests purely random samples for the first n_initial_points
(10 by default). The downside to this is that there is no guarantee that
these samples are spread out evenly across all the dimensions.

Sampling methods as Latin hypercube, Sobol', Halton and Hammersly
take advantage of the fact that we know beforehand how many random
points we want to sample. Then these points can be "spread out" in
such a way that each dimension is explored.

See also the example on a real space
:ref:`sphx_glr_auto_examples_initial_sampling_method.py`

.. GENERATED FROM PYTHON SOURCE LINES 24-37

.. code-block:: default


    print(__doc__)
    import numpy as np
    np.random.seed(1234)
    import matplotlib.pyplot as plt
    from skopt.space import Space
    from skopt.sampler import Sobol
    from skopt.sampler import Lhs
    from skopt.sampler import Halton
    from skopt.sampler import Hammersly
    from skopt.sampler import Grid
    from scipy.spatial.distance import pdist








.. GENERATED FROM PYTHON SOURCE LINES 38-55

.. code-block:: default


    def plot_searchspace(x, title):
        fig, ax = plt.subplots()
        plt.plot(np.array(x)[:, 0], np.array(x)[:, 1], 'bo', label='samples')
        plt.plot(np.array(x)[:, 0], np.array(x)[:, 1], 'bs', markersize=40, alpha=0.5)
        # ax.legend(loc="best", numpoints=1)
        ax.set_xlabel("X1")
        ax.set_xlim([0, 5])
        ax.set_ylabel("X2")
        ax.set_ylim([0, 5])
        plt.title(title)
        ax.grid(True)


    n_samples = 10
    space = Space([(0, 5), (0, 5)])








.. GENERATED FROM PYTHON SOURCE LINES 56-58

Random sampling
---------------

.. GENERATED FROM PYTHON SOURCE LINES 58-66

.. code-block:: default

    x = space.rvs(n_samples)
    plot_searchspace(x, "Random samples")
    pdist_data = []
    x_label = []
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("random")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_001.png
   :alt: Random samples
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 27




.. GENERATED FROM PYTHON SOURCE LINES 67-69

Sobol'
------

.. GENERATED FROM PYTHON SOURCE LINES 69-77

.. code-block:: default


    sobol = Sobol()
    x = sobol.generate(space.dimensions, n_samples)
    plot_searchspace(x, "Sobol'")
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("sobol'")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_002.png
   :alt: Sobol'
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/circleci/project/skopt/sampler/sobol.py:246: UserWarning: The balance properties of Sobol' points require n to be a power of 2. 0 points have been previously generated, then: n=0+10=10. 
      warnings.warn("The balance properties of Sobol' points require "
    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 78-80

Classic latin hypercube sampling
--------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 80-88

.. code-block:: default


    lhs = Lhs(lhs_type="classic", criterion=None)
    x = lhs.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'classic LHS')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("lhs")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_003.png
   :alt: classic LHS
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 89-91

Centered latin hypercube sampling
---------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 91-99

.. code-block:: default


    lhs = Lhs(lhs_type="centered", criterion=None)
    x = lhs.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'centered LHS')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("center")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_004.png
   :alt: centered LHS
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 100-102

Maximin optimized hypercube sampling
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 102-110

.. code-block:: default


    lhs = Lhs(criterion="maximin", iterations=10000)
    x = lhs.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'maximin LHS')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("maximin")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_005.png
   :alt: maximin LHS
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 111-113

Correlation optimized hypercube sampling
----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 113-121

.. code-block:: default


    lhs = Lhs(criterion="correlation", iterations=10000)
    x = lhs.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'correlation LHS')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("corr")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_006.png
   :alt: correlation LHS
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 122-124

Ratio optimized hypercube sampling
----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 124-132

.. code-block:: default


    lhs = Lhs(criterion="ratio", iterations=10000)
    x = lhs.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'ratio LHS')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("ratio")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_007.png
   :alt: ratio LHS
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 133-135

Halton sampling
---------------

.. GENERATED FROM PYTHON SOURCE LINES 135-143

.. code-block:: default


    halton = Halton()
    x = halton.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'Halton')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("halton")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_008.png
   :alt: Halton
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_008.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 144-146

Hammersly sampling
------------------

.. GENERATED FROM PYTHON SOURCE LINES 146-154

.. code-block:: default


    hammersly = Hammersly()
    x = hammersly.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'Hammersly')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("hammersly")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_009.png
   :alt: Hammersly
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_009.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 155-157

Grid sampling
-------------

.. GENERATED FROM PYTHON SOURCE LINES 157-165

.. code-block:: default


    grid = Grid(border="include", use_full_layout=False)
    x = grid.generate(space.dimensions, n_samples)
    plot_searchspace(x, 'Grid')
    print("empty fields: %d" % (36 - np.size(np.unique(x, axis=0), 0)))
    pdist_data.append(pdist(x).flatten())
    x_label.append("grid")




.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_010.png
   :alt: Grid
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_010.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    empty fields: 26




.. GENERATED FROM PYTHON SOURCE LINES 166-172

Pdist boxplot of all methods
----------------------------

This boxplot shows the distance between all generated points using
Euclidian distance. The higher the value, the better the sampling method.
It can be seen that random has the worst performance

.. GENERATED FROM PYTHON SOURCE LINES 172-179

.. code-block:: default


    fig, ax = plt.subplots()
    ax.boxplot(pdist_data)
    plt.grid(True)
    plt.ylabel("pdist")
    _ = ax.set_ylim(0, 6)
    _ = ax.set_xticklabels(x_label, rotation=45, fontsize=8)



.. image-sg:: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_011.png
   :alt: initial sampling method integer
   :srcset: /auto_examples/sampler/images/sphx_glr_initial-sampling-method-integer_011.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.380 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_auto_examples_sampler_initial-sampling-method-integer.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/scikit-optimize/scikit-optimize/master?urlpath=lab/tree/notebooks/auto_examples/sampler/initial-sampling-method-integer.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: initial-sampling-method-integer.py <initial-sampling-method-integer.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: initial-sampling-method-integer.ipynb <initial-sampling-method-integer.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
